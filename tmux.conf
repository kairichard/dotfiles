# borrowed from http://www.mindfuzz.net/?p=178
# check out: http://www.linuxized.com/2010/05/switching-from-gnu-screen-to-tmux/
# https://wiki.archlinux.org/index.php/Tmux
# http://www.dayid.org/os/notes/tm.html

# Use whatever shell we launched from
set -g default-shell $SHELL

# And give us some serious scrollback capabilities
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g history-limit 5000

# enable auto renaming
setw -g automatic-rename on

# Start at 1 instead of 0, I always forget the 0 window
set -g base-index 1

# Rather than constraining window size to the maximum size of any client·
# connected to the *session*, constrain window size to the maximum size of any·
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin "arcticicestudio/nord-tmux"

run -b '~/.tmux/plugins/tpm/tpm'

#########
## Bindings
#########
# act like GNU screen
set -g prefix C-a

# send prefix to window
bind-key a send-prefix

bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# double-tapping control-b should swap windows like screen's control-a
bind C-a last-window

# quick paste from prefix mode
bind p paste-buffer

#########
## Pane/Window-Management...
#########

# More intuitive bindings for screen splitting
unbind %
bind h split-window -v
unbind '"'
bind v split-window -h

# pane selection
# Ctrl-Up/Down/Left/Right select upper or lower Pane
bind-key -n S-Up   select-pane -U
bind-key -n S-Down select-pane -D
bind-key -n S-Right select-pane -R
bind-key -n S-Left select-pane -L

# Alt-Left/Right cycles thru windows (no prefix)
bind-key -n C-Left  select-window -t :-
bind-key -n C-Right select-window -t :+

bind-key -n F11 next-window
bind-key -n F12 previous-window

# a mouse
set-option -g mouse on
# setw -g mouse-select-window on
# setw -g mouse-select-pane on

#########
## Design...
#########

# Set the default terminal mode to 256color mode.
set -g default-terminal "screen-256color"

# Colors and attributes

# Enable activity alerts.
setw -g monitor-activity on
set -g visual-activity on



# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
# clock
set-window-option -g clock-mode-colour colour33 #blue

run-shell "powerline-daemon -q"
if-shell 'test -z "$POWERLINE_CONFIG_COMMAND"' 'set-environment -g POWERLINE_CONFIG_COMMAND powerline-config'
if-shell 'env "$POWERLINE_CONFIG_COMMAND" tmux setup' '' 'run-shell "powerline-config tmux setup"'

# Don't version-check for this core functionality -- anything too old to
# support these options likely won't work well with powerline
set -g status on
set -g status-interval 2
set -g status-left-length 20
set -g status-right '#(eval $POWERLINE_COMMAND tmux right -R pane_id=`tmux display -p "#D"`)'
set -g status-right-length 150
set -g window-status-format "#[fg=colour117,bg=colour234] #I #[fg=colour240]| #W "
set -g window-status-current-format "#[fg=colour117,bg=colour31] #I #[fg=colour231,bold]| #W "
set -g status-justify "centre"

set -qg status-left '#{?client_prefix,#[fg=colour254]#[bg=colour31]#[bold],#[fg=colour16]#[bg=colour254]#[bold]} #S.#I:#P #(eval $POWERLINE_COMMAND tmux left)'
